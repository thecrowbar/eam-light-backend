# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'


steps:
- task: DownloadSecureFile@1
  name: mavensettings
  displayName: 'Download secure file'
  inputs:
    secureFile: settings.xml


-task: PowerShell@2
  displayName: 'Copy maven settings.xml'
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here
      New-Item -Type Directory -Force "${HOME}/.m2"
      Copy-Item -Force "$(mavenSettings.secureFilePath)" "${HOME}/.m2/settings.xml"
      Get-ChildItem -Path "${HOME}/.m2"

- task: Maven@3
  displayName: 'Maven pom.xml'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    options: '-e' # get full errors for debugging build failure
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOptions: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package deploy'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    containerRegistry: AWS
    repository: 'eam-light'
    command: build

- task: AmazonWebServices.aws-vsts-tools.ECRPushImage.ECRPushImage@1
  displayName: 'Push Image: '
  inputs:
    awsCredentials: 'AWS Access + Secret'
    regionName: 'us-east-1'
    sourceImageName: '514869069847.dkr.ecr.us-east-1.amazonaws.com/eam-light'
    sourceImageTag: '$(Build.BuildId)'
    repositoryName: 'eam-light'
