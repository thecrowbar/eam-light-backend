# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'


steps:
- task: DownloadSecureFile@1
  displayName: 'Download secure file'
  inputs:
    secureFile: settings.xml

#Your build pipeline references an undefined variable named ‘settingsxml.secureFilePath’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
- powershell: |
   New-Item -Type Directory -Force "${HOME}/.m2"
   Copy-Item -Force "$(settingsxml.secureFilePath)" "${HOME}/.m2/settings.xml"
   Get-ChildItem -Path "${HOME}/.m2"
  displayName: 'PowerShell Script'

#Your build pipeline references an undefined variable named ‘Parameters.mavenPOMFile’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
- task: Maven@3
  displayName: 'Maven pom.xml'
  inputs:
    mavenPomFile: '$(Parameters.mavenPOMFile)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    containerRegistry: AWS
    repository: 'eam-light'
    command: build

- task: AmazonWebServices.aws-vsts-tools.ECRPushImage.ECRPushImage@1
  displayName: 'Push Image: '
  inputs:
    awsCredentials: 'AWS Access + Secret'
    regionName: 'us-east-1'
    sourceImageName: '514869069847.dkr.ecr.us-east-1.amazonaws.com/eam-light'
    sourceImageTag: '$(Build.BuildId)'
    repositoryName: 'eam-light'
